install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1 - 3/36
deck
52
4/52
0
12/52
2/52
2/51
0.848
0.64
0.64
mypdf
integrate(mypdf,0,1.6)
1
2^(0.5)
0.997 * 0.001
0.999*0.003
(1-0.001) * (1-0.997)
(1-0.001) * (1-0.985)
0.000997 /(0.000997 + 0.014985)
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5 *(edh +edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
means(smeans)
mean(smeans)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
round(ppois(20, lambda = 5 * ) * 100, 1)
round(ppois(20, lambda = 5 * 3) * 100, 1
)
round(ppois(10, lambda = 5 * 3) * 100, 1)
dnorm(0, mean = 0, sd = 1, log = FALSE)
dnorm(68, mean = 76, sd = 4, log = FALSE)
dnorm(75, mean = 76, sd = 4, log = FALSE)
dnorm(76, mean = 76, sd = 4, log = FALSE)
dnorm(76, mean = 76, sd = 1, log = FALSE)
dnorm(76, mean = 76, sd = 4, log = FALSE)
time <- c(68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84)
dnorm(time, mean = 76, sd = 4, log = FALSE)
1 - sum(1-dnorm(time, mean = 76, sd = 4, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 4, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 2, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 1, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.5, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.1, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.1, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.5, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.3, log = FALSE))
1 - prod(1-dnorm(time, mean = 76, sd = 0.4, log = FALSE))
1 - prod(1-dnorm(76, mean = 76, sd = 0.4, log = FALSE))
load(mtcars)
library(datasets)
data(mtcars)
summary(mtcars)
qt(0.95,mtcars$mpg)
qt(0.975,mtcars$mpg)
round(t.test(mtcars$mpg)$conf.int)
qt(0.975,8)
qt(0.975,18)
qt(0.95,18)
qt(0.9,18)
qt(0.95,18)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
for (i in 1 : 1000) mns = c(mns, mean(rexp(40)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40)))
hist(mns)
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.4)))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.4)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.2)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.2)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(rexp(40,rate = 0.2)))
hist(mns)
mns = NULL
for (i in 1 : 1000000) mns = c(mns, mean(rexp(40,rate = 0.2)))
for (i in 1 : 100000) mns = c(mns, mean(rexp(40,rate = 0.2)))
mns = NULL
for (i in 1 : 100000) mns = c(mns, mean(rexp(40,rate = 0.2)))
hist(mns)
hist(mns)
abline()
abline(h= 1/ 0.2)
abline(v= 1/ 0.2)
abline(v= 1/ 0.2 , lwd = 3)
abline(v= 1/ 0.2 , lwd = 3, col = green)
abline(v= 1/ 0.2 , lwd = 3, col = g)
abline(v= 1/ 0.2 , lwd = 3, col = 'g')
abline(v= 1/ 0.2 , lwd = 3, col = rgb(red))
abline(v= 1/ 0.2 , lwd = 3, col = rgb(0,1,0))
abline(v= 1/ 0.2 , lwd = 3, col = rgb(1,0,0))
mean(mns)
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.2)))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.2)))
hist(mns)
abline(v= 1/ 0.2 , lwd = 3, col = rgb(1,0,0))
abline(v= mean(mns) , lwd = 3, col = rgb(0,1,0))
sd(mns)
for (i in 1 : 100) mns = c(mns, mean(rexp(40,rate = 0.2)))
sd(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,rate = 0.2)))
mean(mns)
sd(mns)
sd(mns) * sqrt(1000)
sqrt(5/ 1000)
sqrt(25/ 1000)
var(mns)
sd(mns) * sqrt(40)
var(mns)
5 * 5 / 40
disp(6)
gaussian(2)
pnorm(0, mean=5, sd=sqrt(var(mns)))
pnorm(5, mean=5, sd=sqrt(var(mns)))
pnorm(5, mean=5, sd=1)
pnorm(5, mean=5, sd=0.3)
k <- 1:10
print k
print(k)
k <- 1:10:1000
print(k)
k <- 2:0.1:8
print(k)
k <- seq(2,8,length=100)
print(k)
library(ToothGrowth)
load(ToothGrowth)
ToothGrowth
subset(ToothGrowth,supp="VC")
x<-subset(ToothGrowth,supp="VC")
x<-subset(ToothGrowth,supp=="VC")
View(x)
View(x)
plot(x[:,1],x[:,3])
plot(x[,1],x[,3])
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
oj<-subset(ToothGrowth,supp="OJ")
View(x)
oj<-subset(ToothGrowth,supp=="OJ")
View(oj)
View(oj)
oj_0.5<-subset(oj,dose==0.5)
View(oj_0.5)
View(oj_0.5)
vc_0.5<-subset(vc,dose==0.5)
vc<-subset(ToothGrowth,supp=="VC")
vc_0.5<-subset(vc,dose==0.5)
View(vc_0.5)
View(vc_0.5)
t.test(vc_0.5~oj_0.5,paired = False, var.equal= True)
t.test(vc_0.5,oj_0.5,paired = False, var.equal= True)
t.test(vc_0.5,oj_0.5,paired = FALSE, var.equal= TRUE)
t.test(vc_0.5$len,oj_0.5$len,paired = FALSE, var.equal= TRUE)
base <- c(140,138,150,148,135)
w2 <- c(132,135,151,146,130)
p <- t.test(base, w2, paired = FALSE, alternative="two.sided", var.equal=FALSE)$p.value
The answer to 1. is 1
The answer to 2. is 4e-04
OK
p <- t.test(base, w2, paired = FALSE, alternative="two.sided", var.equal=FALSE)$p.value
p <- t.test(base, w2, paired = TRUE, alternative="two.sided", var.equal=FALSE)$p.value
pbinom(3, prob = .75, size =4, lower.tail = FALSE)
pbinom(3, prob = .75, size =4, lower.tail = TRUE)
pbinom(10, prob = .01, size =1787, lower.tail = TRUE)
pbinom(10, prob = .01, size =1787, lower.tail = FALSE)
pbinom(10, prob = .01, size =1787, lower.tail = TRUE)
(qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
(qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
(qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
sqrt(100 * 0.1^2 / (0.04) ^2) qnorm(0.95)
sqrt(100 * 0.1^2 / (0.04) ^2) - qnorm(0.95)
sqrt(100 * 0.01^2 / (0.04) ^2) - qnorm(0.95)
x <- read.csv('/home/saur/test.txt')
x <- read.csv('/home/saur/test.txt',sep = ",")
header <- c('a1','a2','a3','a4','a5','a6','a7','a8','a9','a10','a11','a12','a13','a14','a15','a16','a17','a18','a19','a20','a21','a22','a23','a24')
x <- read.csv('/home/saur/test.txt',sep = ",",col.names = header)
View(x)
View(x)
time = 1:671
plot(x$a1,time)
plot(time,x$a1)
plot(x$a6,time)
plot(time,x$a6)
plot(time,x$a5)
plot(time,x$a4)
plot(time,x$a6)
plot(time,x$a12)
plot(time,x$a13)
plot(time,x$a18)
plot(time,x$a24)
x <- read.csv('/home/saur/test.txt',sep = ",",col.names = header)
plot(time,x$a6)
plot(time,x$a5)
plot(time,x$a4)
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
install.packages("ggplot2")
install.packages("reshape")
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/tragedy_of_commons.R')
source('~/Documents/master/msc/r-scripts/tragedy_of_commons.R')
source('~/Documents/master/msc/r-scripts/tragedy_of_commons.R')
source('~/Documents/master/msc/r-scripts/tragedy_of_commons.R')
View(x)
View(x)
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
View(x)
View(x)
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
View(xx)
View(xx)
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
()
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
View(yy)
View(yy)
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/pypower_constrain_test.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
View(data_frame)
View(data_frame)
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
warnings
warnings()
debugSource('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
debugSource('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
debugSource('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
view(data_frames[1])
View(data_frames[1])
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
View(x)
k <- c(1:12)
z <- (k==3)
view z
view(z)
View(z)
sum(view)
sum(z)
z <- (k==3 || k == 5)
sum(z)
View(z)
z <- (k==3 | k == 5)
View(z)
sum(z)
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/exp_a_evaluation.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
setwd("~/Documents/master/msc/r-scripts")
source('~/Documents/master/msc/r-scripts/first_look_2.R')
low_failure_run <-function_extract_lowest_failure(data_frames)
View(low_failure_run)
low_failure_data <-function_extract_voltage_action(low_failure_run)
View(low_failure_data)
function_extract_lowest_failure <- function(df)
{
hard_fail <- function_hard_failure(df)
minimum <- which.min(hard_fail)
print(min(hard_fail))
minimum_data_frame <- subset(df[[minimum]],df[[minimum]]$inst_rule1 == 1)
return(minimum_data_frame)
}
low_failure_data <-function_extract_voltage_action(low_failure_run)
View(low_failure_data)
low_failure_run <-function_extract_lowest_failure(data_frames)
low_failure_data <-function_extract_voltage_action(low_failure_run)
View(low_failure_data)
function_extract_lowest_failure <- function(df)
{
voltage_data_frame <- c()
for (k in c(1:100))
{
voltage_data_frame <- rbind(voltage_data_frame,subset(df[[k]],df[[k]]$inst_rule1 == 1))
}
return(voltage_data_frame)
}
function_extract_voltage_action <- function(df)
{
Actions1 <- df$inst_rule4
Actions2 <- df$inst_rule5
Voltage_thresholds <- df$inst_rule2
output_data <- data.frame(cbind(Actions1,Actions2,Voltage_thresholds))
return(output_data)
}
low_failure_run <-function_extract_lowest_failure(data_frames)
View(low_failure_run)
low_failure_data <-function_extract_voltage_action(low_failure_run)
View(low_failure_data)
min(low_failure_data$Actions1)
min(low_failure_data$Actions2)
max(low_failure_data$Actions2)
max(low_failure_data$Actions1)
max(low_failure_data$Voltage_thresholds)
min(low_failure_data$Voltage_thresholds)
mt <- ggplot(low_failure_data,aes(Actions1,Actions2,colour=factor(Voltage_thresholds)))
+geom_boxplot()
mt + geom_boxplot()
mt + geom_histogram()
mt + geom_bar()
mt + geom_bar("identity")
mt <- ggplot(low_failure_data,aes(Actions1,Actions2,colour=factor(Voltage_thresholds)))
first_test <- mt + geom_bar
first_test <- mt + geom_bar()
first_test <- mt + facet_grid(Actions1 ~ Actions2,scales="free")
View(first_test)
plot(first_test)
first_test <- mt + geom_bar()
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
plot(first_test)
first_test <- mt + geom_bar("identity")
g <- ggplot(low_failure_data, aes(x=Actions1, y=Actions2))
g + geom_bar(stat="identity") + facet_grid(Voltage_thresholds~., scales="free")
mt <- ggplot(low_failure_data,aes(Actions1,colour=factor(Voltage_thresholds)))
first_test <- mt + geom_bar()
first_test <- first_test + facet_grid(Actions2,scales="free")
first_test <- first_test + facet_grid(low_failure_data$Actions2,scales="free")
mt <- ggplot(low_failure_data,aes(Actions1,colour=factor(Voltage_thresholds)))
first_test <- mt + geom_bar()
first_test <- first_test + facet_grid(. ~ Actions2,scales="free")
plot(first_test)
first_test <- mt + geom_bar()
first_test <- mt + geom_bar(binwidth = 1)
first_test <- first_test + facet_grid(. ~ Actions2,scales="free")
plot(first_test)
mt <- ggplot(low_failure_data,aes(Actions1,fill=factor(Voltage_thresholds)))
first_test <- mt + geom_bar(binwidth = 1)
first_test <- first_test + facet_grid(. ~ Actions2,scales="free")
plot(first_test)
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
source('~/Documents/master/msc/r-scripts/first_look_2.R')
low_failure_data <-function_extract_voltage_action(low_failure_run)
View(low_failure_data)
View(low_failure_data)
mt <- ggplot(low_failure_data,aes(Actions1,fill=factor(Voltage_thresholds)))
first_test <- mt + geom_bar(binwidth = 0.9)
first_test <- first_test + facet_grid(. ~ Actions2,scales="free")
plot(first_test)
function_extract_voltage_soc_action <- function(df)
{
Actions1 <- df$inst_rule4
Actions2 <- df$inst_rule5
Voltage_thresholds <- df$inst_rule2
SOC_thresholds < df$inst_rule3
output_data <- data.frame(cbind(Actions1,Actions2,SOC_thresholds,Voltage_thresholds))
return(output_data)
}
low_failure_soc_data <- function_extract_voltage_soc_action(low_failure_run)
function_extract_voltage_soc_action <- function(df)
{
Actions1 <- df$inst_rule4
Actions2 <- df$inst_rule5
Voltage_thresholds <- df$inst_rule2
SOC_thresholds <- df$inst_rule3
output_data <- data.frame(cbind(Actions1,Actions2,SOC_thresholds,Voltage_thresholds))
return(output_data)
}
low_failure_soc_data <- function_extract_voltage_soc_action(low_failure_run)
View(low_failure_soc_data)
min(low_failure_soc_data)
max(low_failure_soc_data)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=factor(Voltage_thresholds)))
first_test <- mt + geom_bar(binwidth = 0.9)
first_test <- first_test + facet_grid(Actions1 ~ ACtions2,scales="free")
plot(first_test)
first_test <- mt + geom_bar(binwidth = 0.9)
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
plot(first_test)
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
plot(first_test)
low_failure_soc_data$Voltage_thresholds <- factor(low_failure_soc_data$Voltage_thresholds)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
plot(first_test)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free")
first_test <- first_test + facet_grid(Actions1 ~ Actions2,scales="free",labeller = label_both)
plot(first_test)
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions2 ~ Actions1,scales="free",labeller = label_both)
plot(first_test)
source('~/Documents/master/msc/r-scripts/first_look_2.R')
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions2 ~ Actions1,scales="free",labeller = label_both)
plot(first_test)
View(low_failure_soc_data)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions2 ~ Actions1,scales="free",labeller = label_both)
plot(first_test)
low_failure_soc_data <- function_extract_voltage_soc_action(low_failure_run)
low_failure_soc_data$Voltage_thresholds <- factor(low_failure_soc_data$Voltage_thresholds)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions2 ~ Actions1,scales="free",labeller = label_both)
plot(first_test)
ggsave(first_test,file = "../latex/rules_voltage_soc_first_look.eps")
low_failure_soc_data <- function_extract_voltage_soc_action(low_failure_run)
low_failure_soc_data$Voltage_thresholds <- factor(low_failure_soc_data$Voltage_thresholds)
mt <- ggplot(low_failure_soc_data,aes(SOC_thresholds,fill=Voltage_thresholds))
first_test <- mt + geom_bar(binwidth = 5)
first_test <- first_test + facet_grid(Actions2 ~ Actions1,scales="free_x",labeller = label_both)
ggsave(first_test,file = "../latex/rules_voltage_soc_first_look.eps")
