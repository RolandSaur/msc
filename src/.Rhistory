c <- [0.0357]
c <- 0.0357
c <- (0.0357,0.0425)
b <- c(0.0357,0.0425)
b <- c(0.0357,0.0425,0.0242,0.0202,0.0176,0.0858,0.0276,0.0325,0.1514,0.1935,0.0696,0.0046,0.1347,0.0765,0.2495)
b.lenght
length(b)
T <- sum(b)
func <- function(N){return N}
func <- function(N) {return N}
myfunction <- function(N) {return N}
myfunction <- function(N) {return N}
myfunction <- function(arg1, arg2){
return(arg1)
}
myfunction <- function(N) {return(N)}
minux = (1/T)*sum(t)
minux = (1/T)*sum(b)
w <- [0:14]
w <- c(0:14)
minux = (1/T)*sum(b*w)
minux = (1/T)*sum(b.*w)
minux = (1/T)*sum(b * w)
myfunction <- function(N){return(15/(N-minux))}
disp(minux)
install.packages("sqldf")
x <- 1
msg <- "hello"
print msg
print(msg)
x <- 1:20
print(x)
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
5 +7
x <- 5 + 7
x
y <- x - 3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z -`)
my_sqrt <- sqrt(z -1)
quit
`
```
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
library(swirl)
swirl()
getwd()
ls()
x<- 9
ls
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setdw("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(dir.path('testdir2','testdir3'),recursive = TRUE)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
unlink('testdir2',recursive =TRUE)
setwd(old.dir)
unlink(testdir)
unlink('testdir')
unlink('testdir',recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2),times= 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"hehe")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS , 1:4, sep ="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <-rep(NA,1000)
my_data(c(y,z),100)
my_data<- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 /0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
swirl()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20,nrow=4,ncol =5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 <7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE
dsaf
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("allaa")
submit()
mad_libs(place = "yourmamashouse",adjective = "old", noun ="hammer")
submit()
'I' p 'love' p 'R!'
'I' %p% 'love' %p% 'R!'
library(swirl)
swirl()
swirl
swirl)
swirl()
hear(flags)
head(flags)
dim(flags)
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,prob = c(0.3,0.7))
sample(c(0,1),100,prob = c(0.3,0.7),replace = TRUE)
flips <- sample(c(0,1),100,prob = c(0.3,0.7),replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(n=100,size=1, prob =0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean = 100,sd =25)
rpois(5,mean=10)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(data)
head(cars)
plot(cars)
?plot
plot(x = cars$speed,y=cars$dist)
plot(y = cars$speed,x=cars$dist)
plot(y = cars$speed,x=cars$dist,xlab = "Speed")
plot(x = cars$speed,y=cars$dist,xlab = "Speed")
plot(x = cars$speed,y=cars$dist,ylab = "Stopping Distance")
plot(x = cars$speed,y=cars$dist,ylab = "Stopping Distance",xlab = "Speed")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col = 2)
plot(cars,xlim = c(10,15))
plot(cars,pch = 2
z
plot(cars,pch = 2)
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl,data = mtcars)
hist(mtcars$mpg)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x ("numeric",10)
x <- c("numeric",10)
x
x <- c(numeric,10)
x <- [numeric,10]
x <- array(numeric,10)
library(datasets)
data(iris)
?iris
iris
iris
x <- iris[Species == virginica]
x <- iris[iris$Species == virginica]
x <- iris[iris$Species == "virginica"]
iris$Species == "virginica"
x <- iris[,iris$Species == "virginica"]
x <- iris[iris$Species == "virginica",]
View(x)
mean(iris$Sepal.Length)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
View(mtcars)
unique(mtcars$cyl)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
debug(ls)
ls
ls()
quit
0
q
sadf
library(datasets)
data(iris)
library(datasets)
data(iris)
?iris
ls()
library(datasets)
data(iris)
?iris
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
library(datasets)
data(iris)
?iris
with(iris, tapply(Sepal.Length, Species, mean))
setwd("~/Documents/master/msc/src")
source('~/Documents/master/msc/src/read_profile.R')
View(loadprofile)
source('~/Documents/master/msc/src/read_profile.R')
source('~/Documents/master/msc/src/read_profile.R')
